{"version":3,"sources":["components/Home/HomeCanvas.tsx","components/Home/index.tsx","App.tsx","index.tsx"],"names":["Grid","grid","useRef","useFrame","current","position","z","ref","args","Plane","plane","rotation","Math","PI","color","Sun","sun","depthWrite","GradientTexture","stops","colors","size","Background","Mount","x","y","rotX","random","rotZ","arg","ceil","ref2","wireframe","polygonOffset","MountPlane","CameraMove","dir","state","camera","HomeCanvas","offset","className","fov","near","far","range","map","a","i","Home","onClick","window","open","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce447e54.chunk.js","sourcesContent":["import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { GradientTexture, OrbitControls } from \"@react-three/drei\";\nimport \"./Home.css\";\nimport { useRef } from \"react\";\nimport { GridHelper, Mesh } from \"three\";\nimport { range } from \"lodash\";\n\nconst speed = 0.05;\n\nconst Grid = () => {\n    const grid = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (grid.current.position.z > 1) {\n            grid.current.position.z = 0;\n        } else {\n            grid.current.position.z += speed;\n        }\n    });\n\n    return (\n        <gridHelper\n            ref={grid}\n            args={[190, 170, \"#580360\", \"#580360\"]}\n            position={[0, 0, 0]}\n        />\n    );\n};\n\nconst Plane = () => {\n    const plane = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (plane.current.position.z > 1) {\n            plane.current.position.z = 0;\n        } else {\n            plane.current.position.z += speed;\n        }\n    });\n\n    return (\n        <mesh\n            ref={plane}\n            position={[0, -0.05, 0]}\n            rotation={[-(Math.PI / 2), 0, 0]}\n        >\n            <planeBufferGeometry args={[190, 170]} />\n            <meshBasicMaterial color=\"#0C345A\" />\n        </mesh>\n    );\n};\n\nconst Sun = () => {\n    const sun = useRef<Mesh>(null!);\n\n    useFrame(() => {\n        sun.current.rotation.z -= 0.001;\n    });\n\n    return (\n        <mesh position={[0, 5, -150]} ref={sun}>\n            <sphereBufferGeometry args={[50, 36, 36]} />\n            <meshBasicMaterial depthWrite={false}>\n                <GradientTexture\n                    stops={[0, 0.1, 0.2, 0.35, 0.6, 1]}\n                    colors={[\n                        \"#FAE9B3\",\n                        \"#F7D050\",\n                        \"#F76C26\",\n                        \"#EC5409\",\n                        \"#9E1E05\",\n                        \"#5d0303\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Background = () => {\n    return (\n        <mesh position={[0, 25, -155]}>\n            <planeBufferGeometry args={[575, 75]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.3, 0.4, 0.8, 1]}\n                    colors={[\n                        \"#2d9ee8\",\n                        \"#a78ced\",\n                        \"#f86fbe\",\n                        \"#ff6b70\",\n                        \"#f69109\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Mount = ({ x, y }: { x: number; y: number }) => {\n    const rotX = Math.random();\n    const rotZ = Math.random();\n    const arg = Math.ceil(Math.random() * 2);\n\n    const ref = useRef<Mesh>(null!);\n    const ref2 = useRef<Mesh>(null!);\n\n    useFrame(() => {\n        ref.current.rotation.x += 0.0005;\n        ref.current.rotation.y += 0.0005;\n        ref2.current.rotation.x += 0.0005;\n        ref2.current.rotation.y += 0.0005;\n    });\n\n    return (\n        <>\n            <mesh position={[x, 0.5, y]} rotation={[rotX, 0, rotZ]} ref={ref}>\n                <tetrahedronBufferGeometry args={[5.01, arg]} />\n                <meshBasicMaterial\n                    color=\"#368FD3\"\n                    wireframe={true}\n                    polygonOffset={true}\n                />\n            </mesh>\n            <mesh position={[x, 0.5, y]} rotation={[rotX, 0, rotZ]} ref={ref2}>\n                <tetrahedronBufferGeometry args={[5, arg]} />\n                <meshPhongMaterial\n                    color=\"black\"\n                    wireframe={false}\n                    polygonOffset={true}\n                />\n            </mesh>\n        </>\n    );\n};\n\nconst MountPlane = () => {\n    return (\n        <mesh position={[0, 0.05, -60]} rotation={[-(Math.PI / 2), 0, 0]}>\n            <planeBufferGeometry args={[190, 15]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.5, 1]}\n                    colors={[\"black\", \"black\", \"#580360\"]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst CameraMove = () => {\n    let dir = \"up\";\n    useFrame((state) => {\n        if (state.camera.rotation.x > -0.32) {\n            dir = \"down\";\n        } else if (state.camera.rotation.x < -0.45) {\n            dir = \"up\";\n        }\n\n        if (dir === \"up\") {\n            state.camera.rotation.x += 0.00005;\n        } else if (dir === \"down\") {\n            state.camera.rotation.x -= 0.00005;\n        }\n    });\n    return null;\n};\n\nconst HomeCanvas = () => {\n    let offset = true;\n\n    return (\n        <Canvas\n            className=\"HomeCanvas\"\n            camera={{\n                fov: 75,\n                near: 0.1,\n                far: 1000,\n                position: [0, 4, 9],\n            }}\n        >\n            <Grid />\n            <Background />\n            <Plane />\n            <Sun />\n            {/* <OrbitControls /> */}\n            {range(50).map((a, i) => {\n                offset ? (offset = false) : (offset = true);\n                return <Mount key={a} x={i * 5 - 125} y={offset ? -65 : -70} />;\n            })}\n            <MountPlane />\n            <CameraMove />\n        </Canvas>\n    );\n};\n\nexport default HomeCanvas;\n","import HomeCanvas from \"./HomeCanvas\";\nimport \"./Home.css\";\n\nconst Home = () => {\n    return (\n        <div className=\"HomeDivParent\">\n            <div className=\"HomeInfoCont\">\n                <div className=\"HomeName\">Noah Carmichael-Hitsman</div>\n                <div className=\"HomeLinkCont\">\n                    <div\n                        className=\"HomeLink\"\n                        onClick={() => {\n                            window.open(\"https://github.com/NCHitsman\");\n                        }}\n                    >\n                        Github\n                    </div>\n                    <div\n                        className=\"HomeLink\"\n                        onClick={() => {\n                            window.open(\n                                \"https://www.linkedin.com/in/noah-carmichael-hitsman-b024a1203/\"\n                            );\n                        }}\n                    >\n                        LinkedIn\n                    </div>\n                </div>\n            </div>\n{/*\n            <div className=\"ProjectPageContainer\">\n                <div className=\"ProjectContainer\">\n                    <div className=\"ProjectHolder\">\n                        <div className=\"ProjectTitle\">Planetary Empires</div>\n                        <div className=\"ProjectLinkCont\">\n                            <div\n                                className=\"ProjectLink\"\n                                onClick={() => {\n                                    window.open(\n                                        \"https://planetary-empires.herokuapp.com/\"\n                                    );\n                                }}\n                            >\n                                Livesite\n                            </div>\n                            <div\n                                className=\"ProjectLink\"\n                                onClick={() => {\n                                    window.open(\n                                        \"https://github.com/NCHitsman/Planetary-Empires\"\n                                    );\n                                }}\n                            >\n                                Github\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"ProjectHolder\">\n                        <div className=\"ProjectTitle\">SoundLoud</div>\n                    </div>\n                    <div className=\"ProjectHolder\"></div>\n                    <div className=\"ProjectHolder\"></div>\n                </div>\n            </div> */}\n\n            <HomeCanvas />\n        </div>\n    );\n};\n\nexport default Home;\n","import Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"PageContent\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// Plans: Make a button to turn camera around and display sites\n"],"sourceRoot":""}