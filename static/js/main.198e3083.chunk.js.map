{"version":3,"sources":["images/hitsman.jpg","components/AboutMe/AboutMeContent.tsx","components/AboutMe/index.tsx","components/Home/HomeCanvas.tsx","components/Home/index.tsx","components/Projects/ProjectPage.tsx","images/example.gif","images/pathing.gif","ProjectsArray.ts","components/Projects/index.tsx","components/Resume/ResumeContent.tsx","components/Resume/index.tsx","App.tsx","index.tsx"],"names":["AboutMeContent","className","src","image","alt","AboutMe","about","setAbout","setHome","setResume","resume","lastPage","setLastPage","projects","useState","set","setSet","useEffect","setTimeout","onClick","Grid","grid","useRef","useFrame","current","position","z","ref","args","Plane","plane","rotation","Math","PI","color","Sun","sun","depthWrite","GradientTexture","stops","colors","size","Background","Mount","memo","x","y","rotX","random","rotZ","arg","ceil","ref2","wireframe","polygonOffset","prevProps","nextProps","MountPlane","CameraMove","dir","state","camera","HomeCanvas","home","offset","fov","near","far","range","map","a","i","Home","window","open","ProjectPage","name","link1","link2","about2","tech","index","gif","projectIndex","lastProjectIndex","setOpen","classNameGiver","style","textAlign","marginBottom","techName","ProjectsArray","planetaryEmpiresGif","pathing","Projects","setProjects","setProjectIndex","setLastProjectIndex","max","length","ProjectObject","ResumeContent","Resume","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.198e3083.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hitsman.fba13ceb.jpg\";","import image from '../../images/hitsman.jpg'\n\nconst AboutMeContent = () => {\n    return (\n        <div className='AboutMeContentParnetCont'>\n\n\n            <div className='AboutMeTitle'>About Me</div>\n\n\n            <div className='AboutMeTextPictCont'>\n                <div className='AboutMeText'>\n                    Pharagraph 1\n                    <br>\n                    </br>\n                    <br></br>\n                    Pharagraph 2\n                    <br>\n                    </br>\n                    <br></br>\n                    Pharagraph 3\n                </div>\n                <img className='SelfImage' src={image} alt='Noah Carmichael-Hitsman' />\n            </div>\n\n        </div>\n    )\n}\n\nexport default AboutMeContent\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nimport \"./AboutMe.css\";\nimport AboutMeContent from \"./AboutMeContent\";\n\ninterface props {\n    about: boolean | null;\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\n    setHome: Dispatch<SetStateAction<boolean | null>>;\n    setResume: Dispatch<SetStateAction<boolean | null>>;\n    resume: boolean | null;\n    lastPage: string;\n    setLastPage: Dispatch<SetStateAction<string>>;\n    projects: boolean | null;\n}\n\nconst AboutMe = ({\n    about,\n    setAbout,\n    setHome,\n    setResume,\n    resume,\n    lastPage,\n    setLastPage,\n    projects,\n}: props) => {\n    const [set, setSet] = useState<boolean>(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (about) {\n                setSet(true);\n            } else {\n                setSet(false);\n            }\n        }, 900);\n    }, [about]);\n\n    return (\n        <>\n            <div\n                className={\n                    about == null\n                        ? \"AboutMeParentCont\"\n                        : about\n                        ? lastPage === \"home\"\n                            ? \"AboutMeParentCont active fromHome\"\n                            : \"AboutMeParentCont active fromResume\"\n                        : resume || projects\n                        ? \"AboutMeParentCont unactive resume\"\n                        : \"AboutMeParentCont unactive home\"\n                }\n            >\n                <AboutMeContent />\n            </div>\n            {about && !resume && (\n                <div className={\"UpButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setAbout(false);\n                                setHome(true);\n                                setLastPage(\"about\");\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\"<\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n            {about && !resume && (\n                <div className={\"DownButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setResume(true);\n                                setAbout(false);\n                                setLastPage(\"about\");\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\">\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default AboutMe;\n","import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { GradientTexture, OrbitControls } from \"@react-three/drei\";\nimport \"./Home.css\";\nimport { useRef } from \"react\";\nimport { GridHelper, Mesh } from \"three\";\nimport { range } from \"lodash\";\nimport { memo } from \"react\";\n\nconst speed = 0.05;\n\nconst Grid = () => {\n    const grid = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (grid.current.position.z > 1) {\n            grid.current.position.z = 0;\n        } else {\n            grid.current.position.z += speed;\n        }\n    });\n\n    return (\n        <gridHelper\n            ref={grid}\n            args={[190, 170, \"#580360\", \"#580360\"]}\n            position={[0, 0, 0]}\n        />\n    );\n};\n\nconst Plane = () => {\n    const plane = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (plane.current.position.z > 1) {\n            plane.current.position.z = 0;\n        } else {\n            plane.current.position.z += speed;\n        }\n    });\n\n    return (\n        <mesh\n            ref={plane}\n            position={[0, -0.05, 0]}\n            rotation={[-(Math.PI / 2), 0, 0]}\n        >\n            <planeBufferGeometry args={[190, 170]} />\n            <meshBasicMaterial color=\"#0C345A\" />\n        </mesh>\n    );\n};\n\nconst Sun = () => {\n    const sun = useRef<Mesh>(null!);\n\n    useFrame(() => {\n        sun.current.rotation.z -= 0.001;\n    });\n\n    return (\n        <mesh position={[0, 5, -150]} ref={sun}>\n            <sphereBufferGeometry args={[50, 36, 36]} />\n            <meshBasicMaterial depthWrite={false}>\n                <GradientTexture\n                    stops={[0, 0.1, 0.2, 0.35, 0.6, 1]}\n                    colors={[\n                        \"#FAE9B3\",\n                        \"#F7D050\",\n                        \"#F76C26\",\n                        \"#EC5409\",\n                        \"#9E1E05\",\n                        \"#5d0303\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Background = () => {\n    return (\n        <mesh position={[0, 25, -155]}>\n            <planeBufferGeometry args={[575, 75]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.3, 0.4, 0.8, 1]}\n                    colors={[\n                        \"#2d9ee8\",\n                        \"#a78ced\",\n                        \"#f86fbe\",\n                        \"#ff6b70\",\n                        \"#f69109\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Mount = memo(\n    ({ x, y }: { x: number; y: number }) => {\n        const rotX = Math.random();\n        const rotZ = Math.random();\n        const arg = Math.ceil(Math.random() * 2);\n\n        const ref = useRef<Mesh>(null!);\n        const ref2 = useRef<Mesh>(null!);\n\n        useFrame(() => {\n            ref.current.rotation.x += 0.0005;\n            ref.current.rotation.y += 0.0005;\n            ref2.current.rotation.x += 0.0005;\n            ref2.current.rotation.y += 0.0005;\n        });\n\n        return (\n            <>\n                <mesh\n                    position={[x, 0.5, y]}\n                    rotation={[rotX, 0, rotZ]}\n                    ref={ref}\n                >\n                    <tetrahedronBufferGeometry args={[5.01, arg]} />\n                    <meshBasicMaterial\n                        color=\"#368FD3\"\n                        wireframe={true}\n                        polygonOffset={true}\n                    />\n                </mesh>\n                <mesh\n                    position={[x, 0.5, y]}\n                    rotation={[rotX, 0, rotZ]}\n                    ref={ref2}\n                >\n                    <tetrahedronBufferGeometry args={[5, arg]} />\n                    <meshPhongMaterial\n                        color=\"black\"\n                        wireframe={false}\n                        polygonOffset={true}\n                    />\n                </mesh>\n            </>\n        );\n    },\n    (prevProps, nextProps) => true\n);\n\nconst MountPlane = () => {\n    return (\n        <mesh position={[0, 0.05, -60]} rotation={[-(Math.PI / 2), 0, 0]}>\n            <planeBufferGeometry args={[190, 15]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.5, 1]}\n                    colors={[\"black\", \"black\", \"#580360\"]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst CameraMove = () => {\n    let dir = \"up\";\n    useFrame((state) => {\n        if (state.camera.rotation.x > -0.32) {\n            dir = \"down\";\n        } else if (state.camera.rotation.x < -0.45) {\n            dir = \"up\";\n        }\n\n        if (dir === \"up\") {\n            state.camera.rotation.x += 0.00005;\n        } else if (dir === \"down\") {\n            state.camera.rotation.x -= 0.00005;\n        }\n    });\n    return null;\n};\n\nconst HomeCanvas = ({ home }: { home: boolean | null }) => {\n    let offset = true;\n\n    return (\n        <Canvas\n            className={\"HomeCanvas\"}\n            camera={{\n                fov: 75,\n                near: 0.1,\n                far: 1000,\n                position: [0, 4, 9],\n            }}\n        >\n            <Grid />\n            <Background />\n            <Plane />\n            <Sun />\n            {/* <OrbitControls /> */}\n            {range(50).map((a, i) => {\n                offset ? (offset = false) : (offset = true);\n                return <Mount key={a} x={i * 5 - 125} y={offset ? -65 : -70} />;\n            })}\n            <MountPlane />\n            <CameraMove />\n        </Canvas>\n    );\n};\n\nexport default HomeCanvas;\n","import HomeCanvas from \"./HomeCanvas\";\nimport \"./Home.css\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\ninterface props {\n    home: boolean | null;\n    setHome: Dispatch<SetStateAction<boolean | null>>;\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\n    setLastPage: Dispatch<SetStateAction<string>>;\n}\n\nconst Home = ({ home, setHome, setAbout, setLastPage }: props) => {\n    const [set, setSet] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (home === null) {\n            setSet(true);\n        } else {\n            setTimeout(() => {\n                if (home) {\n                    setSet(true);\n                } else {\n                    setSet(false);\n                }\n            }, 900);\n        }\n    }, [home]);\n\n    return (\n        <>\n            <HomeCanvas home={home} />\n            <div\n                className={\n                    home === null\n                        ? \"HomeContentCont\"\n                        : home\n                        ? \"HomeContentCont showCont\"\n                        : \"HomeContentCont hideCont\"\n                }\n            >\n                <div className=\"HomeName\">Noah Carmichael-Hitsman</div>\n                <div className=\"HomeLinkCont\">\n                    <div\n                        className=\"HomeLink\"\n                        onClick={() => {\n                            window.open(\"https://github.com/NCHitsman\");\n                        }}\n                    >\n                        Github\n                    </div>\n                    <div\n                        className=\"HomeLink\"\n                        onClick={() => {\n                            window.open(\n                                \"https://www.linkedin.com/in/noah-carmichael-hitsman-b024a1203/\"\n                            );\n                        }}\n                    >\n                        LinkedIn\n                    </div>\n                </div>\n            </div>\n            {(home || home === null) && (\n                <div className={\"DownButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setHome(false);\n                                setAbout(true);\n                                setLastPage(\"home\");\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\">\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport \"./ProjectPage.css\";\ninterface props {\n    name: string;\n    link1: string;\n    link2: string;\n    about: string;\n    about2: string;\n    tech: string[];\n    index: number;\n    gif: any;\n    projectIndex: number | null;\n    lastProjectIndex: number | null;\n}\n\nconst ProjectPage = ({\n    name,\n    link1,\n    link2,\n    about,\n    about2,\n    tech,\n    index,\n    gif,\n    projectIndex,\n    lastProjectIndex,\n}: props) => {\n    const [open, setOpen] = useState<boolean>(true);\n\n    const classNameGiver = () => {\n        if (lastProjectIndex !== null) {\n            if (projectIndex === null && index === 0) {\n                return \"ProjectPageParentCont\";\n            }\n\n            if (index === projectIndex) {\n                if (lastProjectIndex < index) {\n                    return \"ProjectPageParentCont raise\";\n                } else if (lastProjectIndex > index) {\n                    return \"ProjectPageParentCont lower\";\n                }\n            }\n\n            if (index === lastProjectIndex) {\n                if (projectIndex === index + 1) {\n                    return \"ProjectPageParentCont hide up\";\n                } else if (projectIndex === index - 1) {\n                    return \"ProjectPageParentCont hide down\";\n                }\n            }\n\n            return \"ProjectPageParentCont hide\";\n        }\n    };\n\n    return (\n        <div className={classNameGiver()}>\n            <img\n                className=\"BackgroundImage\"\n                src={gif}\n                alt=\"demonstrational gif\"\n            />\n            <div\n                className={\n                    index % 2 === 0\n                        ? open\n                            ? \"ProjectPageInfoParent left open\"\n                            : \"ProjectPageInfoParent left closed\"\n                        : open\n                        ? \"ProjectPageInfoParent right open\"\n                        : \"ProjectPageInfoParent right closed\"\n                }\n            >\n                {index % 2 !== 0 && (\n                    <div className=\"ProjectPageTransitionButtonCont\">\n                        <button\n                            className=\"ProjectPageTransitionButton\"\n                            onClick={() =>\n                                open ? setOpen(false) : setOpen(true)\n                            }\n                        >\n                            {open ? \">\" : \"<\"}\n                        </button>\n                    </div>\n                )}\n                <div\n                    className={\n                        index % 2 === 0\n                            ? open\n                                ? \"ProjectPageInfoCont right open\"\n                                : \"ProjectPageInfoCont right closed\"\n                            : open\n                            ? \"ProjectPageInfoCont left open\"\n                            : \"ProjectPageInfoCont left closed\"\n                    }\n                >\n                    <div className='ProjectPageNameAboutCollisionCont'>\n                        <div className=\"ProjectPageNameTitleCont\">\n                            <div\n                                style={\n                                    index % 2 === 0\n                                        ? { textAlign: \"left\" }\n                                        : { textAlign: \"right\" }\n                                }\n                                className=\"ProjectPageNameTitle\"\n                            >\n                                {name}\n                            </div>\n                        </div>\n                        <div className=\"ProjectPageAboutCont\">\n                            <div\n                                style={\n                                    index % 2 === 0\n                                        ? {\n                                              textAlign: \"left\",\n                                              marginBottom: \"25px\",\n                                          }\n                                        : {\n                                              textAlign: \"right\",\n                                              marginBottom: \"25px\",\n                                          }\n                                }\n                                className=\"ProjectPageAboutText about1\"\n                            >\n                                {about}\n                            </div>\n                            <div\n                                style={\n                                    index % 2 === 0\n                                        ? { textAlign: \"left\" }\n                                        : { textAlign: \"right\" }\n                                }\n                                className=\"ProjectPageAboutText about2\"\n                            >\n                                {about2}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"ProjectPageTechCont\">\n                        <div\n                            style={\n                                index % 2 === 0\n                                    ? { textAlign: \"left\" }\n                                    : { textAlign: \"right\" }\n                            }\n                            className=\"ProjectPageTechTitle\"\n                        >\n                            Tech Used\n                        </div>\n                        <ul\n                            style={\n                                index % 2 === 0\n                                    ? { textAlign: \"left\" }\n                                    : { textAlign: \"right\" }\n                            }\n                            className=\"ProjectPageTechUl\"\n                            dir={index % 2 === 0 ? \"ltl\" : \"rtl\"}\n                        >\n                            {tech.map((techName, i) => (\n                                <li className=\"ProjectPageTechLi\" key={i}>\n                                    {techName}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"ProjectPageLinkCont\">\n                        <div\n                            className=\"ProjectPageLink\"\n                            onClick={() => window.open(link1)}\n                        >\n                            Github\n                        </div>\n                        <div\n                            className=\"ProjectPageLink\"\n                            onClick={() => window.open(link2)}\n                        >\n                            Live Link\n                        </div>\n                    </div>\n                </div>\n                {index % 2 === 0 && (\n                    <div className=\"ProjectPageTransitionButtonCont\">\n                        <button\n                            className=\"ProjectPageTransitionButton\"\n                            onClick={() =>\n                                open ? setOpen(false) : setOpen(true)\n                            }\n                        >\n                            {open ? \"<\" : \">\"}\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectPage;\n","export default __webpack_public_path__ + \"static/media/example.3352130f.gif\";","export default __webpack_public_path__ + \"static/media/pathing.b22b7c5f.gif\";","import planetaryEmpiresGif from './images/example.gif'\nimport pathing from './images/pathing.gif'\n\nconst ProjectsArray = [{\n    name: 'Planetary Empires',\n    link1: 'https://github.com/NCHitsman/Planetary-Empires',\n    link2: 'https://planetary-empires.herokuapp.com/',\n    about: 'Planetary Empires is an expansion game for Warhammer 40,000 released by Games Workshop. The game rules and accompanying map board and pieces allow you to wage a campaign across a planetary-size landscape. It is designed to assist you in running evocative, narrative-driven campaigns.',\n    about2: 'This site helps you organize players, systems, and maps, allowing you to run a Planetary Empires game all in one place!',\n    tech: ['Javascript', 'React', 'Redux', 'Sequelize', 'Postgresql', 'ThreeJS'],\n    gif: planetaryEmpiresGif,\n},{\n    name: 'SoundLoud',\n    link1: 'https://github.com/NCHitsman/SoundLoud',\n    link2: 'https://soundloud-hitsman.herokuapp.com/',\n    about: 'About Text About Text About Text About Text About Text About Text About Text About Text About Text',\n    about2: 'About Text About Text About Text About Text About Text About Text About Text About Text About Text',\n    tech: ['Javascript', 'React', 'Redux', 'Sequelize', 'Postgresql', 'ThreeJS'],\n    gif: pathing,\n},{\n    name: 'Planetary Empires',\n    link1: 'https://github.com/NCHitsman/Planetary-Empires',\n    link2: 'https://planetary-empires.herokuapp.com/',\n    about: 'Planetary Empires is an expansion game for Warhammer 40,000 released by Games Workshop. The game rules and accompanying map board and pieces allow you to wage a campaign across a planetary-size landscape. It is designed to assist you in running evocative, narrative-driven campaigns.',\n    about2: 'This site helps you organize players, systems, and maps, allowing you to run a Planetary Empires game all in one place!',\n    tech: ['1', '2', '3', '4', '5', '6'],\n    gif: planetaryEmpiresGif,\n},{\n    name: 'SoundLoud',\n    link1: 'https://github.com/NCHitsman/SoundLoud',\n    link2: 'https://soundloud-hitsman.herokuapp.com/',\n    about: 'About Text About Text About Text About Text About Text About Text About Text About Text About Text',\n    about2: 'About Text About Text About Text About Text About Text About Text About Text About Text About Text',\n    tech: ['1', '2', '3', '4', '5', '6'],\n    gif: pathing,\n}]\n\nexport default ProjectsArray\n","import { useState } from \"react\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport ProjectPage from \"./ProjectPage\";\nimport \"./Projects.css\";\nimport ProjectsArray from \"../../ProjectsArray\";\nimport { useEffect } from \"react\";\n\ninterface props {\n    projects: boolean | null;\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\n    setResume: Dispatch<SetStateAction<boolean | null>>;\n    setLastPage: Dispatch<SetStateAction<string>>;\n}\n\nconst Projects = ({ projects, setProjects, setResume, setLastPage }: props) => {\n    const [projectIndex, setProjectIndex] = useState<number | null>(null);\n    const [lastProjectIndex, setLastProjectIndex] = useState<number | null>(0);\n    const max = ProjectsArray.length - 1;\n\n    const [set, setSet] = useState<boolean>(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (projects) {\n                setSet(true);\n            } else {\n                setSet(false);\n            }\n        }, 900);\n    }, [projects, projectIndex]);\n\n    return (\n        <>\n            <div\n                className={\n                    projects == null\n                        ? \"ProjectsParentCont\"\n                        : projects\n                        ? \"ProjectsParentCont active\"\n                        : \"ProjectsParentCont unactive\"\n                }\n            >\n                {ProjectsArray.map((ProjectObject, i) => {\n                    return (\n                        <ProjectPage\n                            name={ProjectObject.name}\n                            link1={ProjectObject.link1}\n                            link2={ProjectObject.link2}\n                            about={ProjectObject.about}\n                            about2={ProjectObject.about2}\n                            tech={ProjectObject.tech}\n                            index={i}\n                            gif={ProjectObject.gif}\n                            projectIndex={projectIndex}\n                            lastProjectIndex={lastProjectIndex}\n                            key={i}\n                        />\n                    );\n                })}\n            </div>\n            {(projectIndex === null || projectIndex === 0) && projects && (\n                <div className={\"UpButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setProjects(false);\n                                setResume(true);\n                                setLastPage(\"projects\");\n                                setSet(false)\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\"<\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n            {projects && projectIndex !== 0 && projectIndex !== null && (\n                <div className={\"UpButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                if (projectIndex !== null) {\n                                    setLastProjectIndex(projectIndex);\n                                    setProjectIndex(projectIndex - 1);\n                                }\n                                setSet(false)\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\"<\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n            {projects && projectIndex !== max && (\n                <div className={\"DownButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                if (projectIndex === null) {\n                                    setLastProjectIndex(0);\n                                    setProjectIndex(1);\n                                } else {\n                                    setLastProjectIndex(projectIndex);\n                                    setProjectIndex(projectIndex + 1);\n                                }\n                                setSet(false)\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\">\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Projects;\n","const ResumeContent = () => {\n    return (\n        <div className=\"ResumeContentParnetCont\">\n            <div className=\"ResumeTitle\">Resume</div>\n        </div>\n    );\n};\n\nexport default ResumeContent;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nimport \"./Resume.css\";\nimport ResumeContent from \"./ResumeContent\";\n\ninterface props {\n    about: boolean | null;\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\n    projects: boolean | null;\n    setResume: Dispatch<SetStateAction<boolean | null>>;\n    resume: boolean | null;\n    lastPage: string;\n}\n\nconst Resume = ({\n    about,\n    setAbout,\n    setProjects,\n    projects,\n    setResume,\n    resume,\n    lastPage,\n}: props) => {\n    const [set, setSet] = useState<boolean>(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (resume) {\n                setSet(true);\n            } else {\n                setSet(false);\n            }\n        }, 900);\n    }, [resume]);\n    return (\n        <>\n            <div\n                className={\n                    resume == null\n                        ? \"ResumeParentCont\"\n                        : resume\n                        ? lastPage === \"about\"\n                            ? \"ResumeParentCont active fromAbout\"\n                            : \"ResumeParentCont active fromProjects\"\n                        : projects\n                        ? \"ResumeParentCont unactive projects\"\n                        : \"ResumeParentCont unactive about\"\n                }\n            >\n                <ResumeContent />\n            </div>\n            {resume && !projects && (\n                <div className={\"UpButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setResume(false);\n                                setAbout(true);\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\"<\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n            {resume && !projects && (\n                <div className={\"DownButtonCont\"}>\n                    <button\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\n                        onClick={() => {\n                            if (set) {\n                                setProjects(true);\n                                setResume(false);\n                            }\n                        }}\n                    >\n                        <div\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\n                        >\n                            {\">\"}\n                        </div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Resume;\n","import { useState } from \"react\";\nimport AboutMe from \"./components/AboutMe\";\nimport Home from \"./components/Home\";\nimport Projects from \"./components/Projects\";\nimport Resume from \"./components/Resume\";\n\nfunction App() {\n    const [home, setHome] = useState<boolean | null>(null);\n    const [about, setAbout] = useState<boolean | null>(null);\n    const [resume, setResume] = useState<boolean | null>(null)\n    const [projects, setProjects] = useState<boolean | null>(null);\n    const [lastPage, setLastPage] = useState<string>('');\n\n    return (\n        <div className=\"PageContent\">\n            <Home home={home} setHome={setHome} setAbout={setAbout} setLastPage={setLastPage}/>\n            <AboutMe about={about} setAbout={setAbout} setHome={setHome} setResume={setResume} resume={resume} lastPage={lastPage} setLastPage={setLastPage} projects={projects}/>\n            <Resume about={about} setAbout={setAbout} setProjects={setProjects} projects={projects} setResume={setResume} resume={resume} lastPage={lastPage} />\n            <Projects projects={projects} setProjects={setProjects} setResume={setResume} setLastPage={setLastPage}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// Plans: Make a button to turn camera around and display sites\n"],"sourceRoot":""}