{"version":3,"sources":["images/hitsman.jpg","components/AboutMe/AboutMeContent.tsx","components/AboutMe/index.tsx","components/Home/HomeCanvas.tsx","components/Home/index.tsx","components/Projects/ProjectPage.tsx","ProjectsArray.ts","images/example.gif","images/song.gif","images/tour.gif","components/Projects/index.tsx","App.tsx","index.tsx"],"names":["AboutMeContent","className","src","image","alt","AboutMe","about","setAbout","setHome","lastPage","setLastPage","projects","setProjects","setCurrentDownButton","setCurrentUpButton","useState","set","setSet","aboutDownButton","useRef","aboutUpButton","useEffect","setTimeout","current","ref","onClick","Grid","grid","useFrame","position","z","args","Plane","plane","rotation","Math","PI","color","Sun","sun","depthWrite","GradientTexture","stops","colors","size","Background","Mount","memo","x","y","rotX","random","rotZ","arg","ceil","ref2","wireframe","polygonOffset","prevProps","nextProps","MountPlane","CameraMove","dir","state","camera","HomeCanvas","offset","fov","near","far","range","map","a","i","Home","home","homeDownButton","window","open","ProjectPage","name","link1","link2","about2","tech","index","gif","projectIndex","lastProjectIndex","setOpen","keydownHandler","useCallback","e","code","addEventListener","removeEventListener","classNameGiver","style","textAlign","marginBottom","techName","ProjectsArray","Projects","setProjectIndex","setLastProjectIndex","max","length","projectsUpButton","projectsDownButton","projectsUpButtonAbout","ProjectObject","App","currentDownButton","currentUpButton","detectMouseWheelDirection","delta","direction","deltaY","detail","scrollHandler","click","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5621428.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hitsman.fba13ceb.jpg\";","import image from \"../../images/hitsman.jpg\";\r\n\r\nconst AboutMeContent = () => {\r\n    return (\r\n        <div className=\"AboutMeContentParnetCont\">\r\n            <div className=\"AboutMeTitle\">About Me</div>\r\n\r\n            <div className=\"AboutMeTextPictCont\">\r\n                <div className=\"AboutMeText\">\r\n                    I was led to Software Engineering by a desire to be\r\n                    challenged and find solutions to complex problems. Always\r\n                    striving to make my solutions scalable, efficient, and\r\n                    progressive, I include the most advanced and\r\n                    breaking-edge technology in my projects. I am proud to\r\n                    know that I bring interesting ideas with efficient standards\r\n                    to any team I join.\r\n                    <br></br>\r\n                    <br></br>I decided to further my education by attending App\r\n                    Academy’s 24-week, 1000+ hour Software Engineering course.\r\n                    During this intensive program I honed my expertise in Typescript, React, Redux, CSS,\r\n                    Python, C#, alongside many other industry relevant\r\n                    technologies. Given my strong technical experience, I am\r\n                    confident in my ability to contribute from day one as a\r\n                    Full-Stack Developer on any project.\r\n                </div>\r\n                    <img\r\n                        className=\"SelfImage\"\r\n                        src={image}\r\n                        alt=\"Noah Carmichael-Hitsman\"\r\n                    />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutMeContent;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport \"./AboutMe.css\";\r\nimport AboutMeContent from \"./AboutMeContent\";\r\n\r\ninterface props {\r\n    about: boolean | null;\r\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\r\n    setHome: Dispatch<SetStateAction<boolean | null>>;\r\n    lastPage: string;\r\n    setLastPage: Dispatch<SetStateAction<string>>;\r\n    projects: boolean | null;\r\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\r\n    setCurrentDownButton: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\r\n    setCurrentUpButton: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\r\n}\r\n\r\nconst AboutMe = ({\r\n    about,\r\n    setAbout,\r\n    setHome,\r\n    lastPage,\r\n    setLastPage,\r\n    projects,\r\n    setProjects,\r\n    setCurrentDownButton,\r\n    setCurrentUpButton,\r\n}: props) => {\r\n    const [set, setSet] = useState<boolean>(false);\r\n    const aboutDownButton = useRef<HTMLButtonElement>(null!);\r\n    const aboutUpButton = useRef<HTMLButtonElement>(null!)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (about) {\r\n                setSet(true);\r\n            } else {\r\n                setSet(false);\r\n            }\r\n        }, 900);\r\n    }, [about]);\r\n\r\n    useEffect(() => {\r\n        if (set) {\r\n            setCurrentUpButton(aboutUpButton.current);\r\n            setCurrentDownButton(aboutDownButton.current);\r\n        }\r\n    }, [set, setCurrentDownButton, setCurrentUpButton]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={\r\n                    about === null\r\n                        ? \"AboutMeParentCont\"\r\n                        : about\r\n                        ? lastPage === \"home\"\r\n                            ? \"AboutMeParentCont active fromHome\"\r\n                            : \"AboutMeParentCont active fromProjects\"\r\n                        : projects\r\n                        ? \"AboutMeParentCont unactive projects\"\r\n                        : \"AboutMeParentCont unactive home\"\r\n                }\r\n            >\r\n                <AboutMeContent />\r\n            </div>\r\n            {about && !projects && (\r\n                <div className={\"UpButtonCont\"}>\r\n                    <button\r\n                    ref={aboutUpButton}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                setAbout(false);\r\n                                setHome(true);\r\n                                setLastPage(\"about\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\"<\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {about && !projects && (\r\n                <div className={\"DownButtonCont\"}>\r\n                    <button\r\n                        ref={aboutDownButton}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                setProjects(true);\r\n                                setAbout(false);\r\n                                setLastPage(\"about\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\">\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutMe;\r\n","import { Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { GradientTexture, OrbitControls } from \"@react-three/drei\";\r\nimport \"./Home.css\";\r\nimport { useRef } from \"react\";\r\nimport { GridHelper, Mesh } from \"three\";\r\nimport { range } from \"lodash\";\r\nimport { memo } from \"react\";\r\n\r\nconst speed = 0.05;\r\n\r\nconst Grid = () => {\r\n    const grid = useRef<GridHelper>(null!);\r\n\r\n    useFrame(() => {\r\n        if (grid.current.position.z > 1.35) {\r\n            grid.current.position.z = 0;\r\n        } else {\r\n            grid.current.position.z += speed;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <gridHelper\r\n            ref={grid}\r\n            args={[240, 170, \"#580360\", \"#580360\"]}\r\n            position={[0, 0, 0]}\r\n        />\r\n    );\r\n};\r\n\r\nconst Plane = () => {\r\n    const plane = useRef<GridHelper>(null!);\r\n\r\n    useFrame(() => {\r\n        if (plane.current.position.z > 1) {\r\n            plane.current.position.z = 0;\r\n        } else {\r\n            plane.current.position.z += speed;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <mesh\r\n            ref={plane}\r\n            position={[0, -0.05, 0]}\r\n            rotation={[-(Math.PI / 2), 0, 0]}\r\n        >\r\n            <planeBufferGeometry args={[240, 170]} />\r\n            <meshBasicMaterial color=\"#0C345A\" />\r\n        </mesh>\r\n    );\r\n};\r\n\r\nconst Sun = () => {\r\n    const sun = useRef<Mesh>(null!);\r\n\r\n    useFrame(() => {\r\n        sun.current.rotation.z -= 0.001;\r\n    });\r\n\r\n    return (\r\n        <mesh position={[0, 5, -150]} ref={sun}>\r\n            <sphereBufferGeometry args={[50, 36, 36]} />\r\n            <meshBasicMaterial depthWrite={false}>\r\n                <GradientTexture\r\n                    stops={[0, 0.1, 0.2, 0.35, 0.6, 1]}\r\n                    colors={[\r\n                        \"#FAE9B3\",\r\n                        \"#F7D050\",\r\n                        \"#F76C26\",\r\n                        \"#EC5409\",\r\n                        \"#9E1E05\",\r\n                        \"#5d0303\",\r\n                    ]}\r\n                    size={1024}\r\n                />\r\n            </meshBasicMaterial>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nconst Background = () => {\r\n    return (\r\n        <mesh position={[0, 25, -155]}>\r\n            <planeBufferGeometry args={[655, 75]} />\r\n            <meshBasicMaterial>\r\n                <GradientTexture\r\n                    stops={[0, 0.3, 0.4, 0.8, 1]}\r\n                    colors={[\r\n                        \"#2d9ee8\",\r\n                        \"#a78ced\",\r\n                        \"#f86fbe\",\r\n                        \"#ff6b70\",\r\n                        \"#f69109\",\r\n                    ]}\r\n                    size={1024}\r\n                />\r\n            </meshBasicMaterial>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nconst Mount = memo(\r\n    ({ x, y, z }: { x: number; y: number; z: number }) => {\r\n        const rotX = Math.random();\r\n        const rotZ = Math.random();\r\n        const arg = Math.ceil(Math.random() * 2);\r\n\r\n        const ref = useRef<Mesh>(null!);\r\n        const ref2 = useRef<Mesh>(null!);\r\n\r\n        useFrame(() => {\r\n            ref.current.rotation.x += 0.0005;\r\n            ref.current.rotation.y += 0.0005;\r\n            ref2.current.rotation.x += 0.0005;\r\n            ref2.current.rotation.y += 0.0005;\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <mesh\r\n                    position={[x, z, y]}\r\n                    rotation={[rotX, 0, rotZ]}\r\n                    ref={ref}\r\n                >\r\n                    <tetrahedronBufferGeometry args={[5.05, arg]} />\r\n                    <meshBasicMaterial\r\n                        color=\"#368FD3\"\r\n                        wireframe={true}\r\n                        polygonOffset={true}\r\n                    />\r\n                </mesh>\r\n                <mesh\r\n                    position={[x, z, y]}\r\n                    rotation={[rotX, 0, rotZ]}\r\n                    ref={ref2}\r\n                >\r\n                    <tetrahedronBufferGeometry args={[5, arg]} />\r\n                    <meshPhongMaterial\r\n                        color=\"black\"\r\n                        wireframe={false}\r\n                        polygonOffset={true}\r\n                    />\r\n                </mesh>\r\n            </>\r\n        );\r\n    },\r\n    (prevProps, nextProps) => true\r\n);\r\n\r\nconst MountPlane = () => {\r\n    return (\r\n        <mesh position={[0, 0.05, -60]} rotation={[-(Math.PI / 2), 0, 0]}>\r\n            <planeBufferGeometry args={[270, 15]} />\r\n            <meshBasicMaterial>\r\n                <GradientTexture\r\n                    stops={[0, 0.5, 1]}\r\n                    colors={[\"black\", \"black\", \"#580360\"]}\r\n                    size={1024}\r\n                />\r\n            </meshBasicMaterial>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nconst CameraMove = () => {\r\n    let dir = \"up\";\r\n    useFrame((state) => {\r\n        if (state.camera.rotation.x > -0.32) {\r\n            dir = \"down\";\r\n        } else if (state.camera.rotation.x < -0.45) {\r\n            dir = \"up\";\r\n        }\r\n\r\n        if (dir === \"up\") {\r\n            state.camera.rotation.x += 0.00005;\r\n        } else if (dir === \"down\") {\r\n            state.camera.rotation.x -= 0.00005;\r\n        }\r\n    });\r\n    return null;\r\n};\r\n\r\nconst HomeCanvas = () => {\r\n    let offset = true;\r\n\r\n    return (\r\n        <Canvas\r\n            className={\"HomeCanvas\"}\r\n            camera={{\r\n                fov: 75,\r\n                near: 0.1,\r\n                far: 1000,\r\n                position: [0, 4, 9],\r\n            }}\r\n        >\r\n            <Grid />\r\n            <Background />\r\n            <Plane />\r\n            <Sun />\r\n            {range(80).map((a, i) => {\r\n                offset ? (offset = false) : (offset = true);\r\n                return <Mount key={a} x={i * 4 - 155} y={offset ? -65 : -70} z={offset ? 0.5 : 2} />;\r\n            })}\r\n            <MountPlane />\r\n            <CameraMove />\r\n        </Canvas>\r\n    );\r\n};\r\n\r\nexport default HomeCanvas;\r\n","import HomeCanvas from \"./HomeCanvas\";\r\nimport \"./Home.css\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface props {\r\n    home: boolean | null;\r\n    setHome: Dispatch<SetStateAction<boolean | null>>;\r\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\r\n    setLastPage: Dispatch<SetStateAction<string>>;\r\n    setCurrentDownButton: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\r\n}\r\n\r\nconst Home = ({\r\n    home,\r\n    setHome,\r\n    setAbout,\r\n    setLastPage,\r\n    setCurrentDownButton,\r\n}: props) => {\r\n    const [set, setSet] = useState<boolean>(false);\r\n    const homeDownButton = useRef<HTMLButtonElement>(null!);\r\n\r\n    useEffect(() => {\r\n        if (home === null) {\r\n            setSet(true);\r\n        } else {\r\n            setTimeout(() => {\r\n                if (home) {\r\n                    setSet(true);\r\n                } else {\r\n                    setSet(false);\r\n                }\r\n            }, 900);\r\n        }\r\n    }, [home]);\r\n\r\n    useEffect(() => {\r\n        if (set) {\r\n            setCurrentDownButton(homeDownButton.current);\r\n        }\r\n    }, [setCurrentDownButton, set]);\r\n\r\n    return (\r\n        <>\r\n            <HomeCanvas />\r\n            <div\r\n                className={\r\n                    home === null\r\n                        ? \"HomeContentCont\"\r\n                        : home\r\n                        ? \"HomeContentCont showCont\"\r\n                        : \"HomeContentCont hideCont\"\r\n                }\r\n            >\r\n                <div className=\"HomeName\">Noah Carmichael-Hitsman</div>\r\n                <div className=\"HomeLinkCont\">\r\n                    <div\r\n                        className=\"HomeLink\"\r\n                        onClick={() => {\r\n                            window.open(\"https://github.com/NCHitsman\");\r\n                        }}\r\n                    >\r\n                        Github\r\n                    </div>\r\n                    <div\r\n                        className=\"HomeLink\"\r\n                        onClick={() => {\r\n                            window.open(\r\n                                \"https://www.linkedin.com/in/noah-carmichael-hitsman-b024a1203/\"\r\n                            );\r\n                        }}\r\n                    >\r\n                        LinkedIn\r\n                    </div>\r\n                    <div\r\n                        className=\"HomeLink\"\r\n                        onClick={() => {\r\n                            window.open(\r\n                                \"https://drive.google.com/file/d/1wMHuGNecNLmpFnzpA3qhdJexv6S3UUU5/view?usp=sharing\"\r\n                            );\r\n                        }}\r\n                    >\r\n                        Resume\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {(home || home === null) && (\r\n                <div className={\"DownButtonCont\"}>\r\n                    <button\r\n                        ref={homeDownButton}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                setHome(false);\r\n                                setAbout(true);\r\n                                setLastPage(\"home\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\">\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./ProjectPage.css\";\r\ninterface props {\r\n    name: string;\r\n    link1: string;\r\n    link2: string;\r\n    about: string;\r\n    about2: string;\r\n    tech: string[];\r\n    index: number;\r\n    gif: any;\r\n    projectIndex: number | null;\r\n    lastProjectIndex: number | null;\r\n}\r\n\r\nconst ProjectPage = ({\r\n    name,\r\n    link1,\r\n    link2,\r\n    about,\r\n    about2,\r\n    tech,\r\n    index,\r\n    gif,\r\n    projectIndex,\r\n    lastProjectIndex,\r\n}: props) => {\r\n    const [open, setOpen] = useState<boolean>(true);\r\n\r\n    const keydownHandler = useCallback(\r\n        (e: KeyboardEvent) => {\r\n            if (\r\n                e.code === \"Space\" &&\r\n                (index === projectIndex ||\r\n                    (index === 0 && projectIndex === null))\r\n            ) {\r\n                setOpen(!open);\r\n            }\r\n        },\r\n        [open, index, projectIndex]\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", keydownHandler);\r\n\r\n        return () => window.removeEventListener(\"keydown\", keydownHandler);\r\n    }, [keydownHandler]);\r\n\r\n    const classNameGiver = () => {\r\n        if (lastProjectIndex !== null) {\r\n            if (projectIndex === null && index === 0) {\r\n                return \"ProjectPageParentCont\";\r\n            }\r\n\r\n            if (index === projectIndex) {\r\n                if (lastProjectIndex < index) {\r\n                    return \"ProjectPageParentCont raise\";\r\n                } else if (lastProjectIndex > index) {\r\n                    return \"ProjectPageParentCont lower\";\r\n                }\r\n            }\r\n\r\n            if (index === lastProjectIndex) {\r\n                if (projectIndex === index + 1) {\r\n                    return \"ProjectPageParentCont hide up\";\r\n                } else if (projectIndex === index - 1) {\r\n                    return \"ProjectPageParentCont hide down\";\r\n                }\r\n            }\r\n\r\n            return \"ProjectPageParentCont hide\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classNameGiver()}>\r\n            <img\r\n                className=\"BackgroundImage\"\r\n                src={gif}\r\n                alt=\"demonstrational gif\"\r\n            />\r\n            <div\r\n                className={\r\n                    index % 2 === 0\r\n                        ? open\r\n                            ? \"ProjectPageInfoParent left open\"\r\n                            : \"ProjectPageInfoParent left closed\"\r\n                        : open\r\n                        ? \"ProjectPageInfoParent right open\"\r\n                        : \"ProjectPageInfoParent right closed\"\r\n                }\r\n            >\r\n                {index % 2 !== 0 && (\r\n                    <div className=\"ProjectPageTransitionButtonCont\">\r\n                        <button\r\n                            className=\"ProjectPageTransitionButton\"\r\n                            onClick={() =>\r\n                                open ? setOpen(false) : setOpen(true)\r\n                            }\r\n                        >\r\n                            {open ? \">\" : \"<\"}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className={\r\n                        index % 2 === 0\r\n                            ? open\r\n                                ? \"ProjectPageInfoCont right open\"\r\n                                : \"ProjectPageInfoCont right closed\"\r\n                            : open\r\n                            ? \"ProjectPageInfoCont left open\"\r\n                            : \"ProjectPageInfoCont left closed\"\r\n                    }\r\n                >\r\n                    <div className=\"ProjectPageNameAboutCollisionCont\">\r\n                        <div className=\"ProjectPageNameTitleCont\">\r\n                            <div\r\n                                style={\r\n                                    index % 2 === 0\r\n                                        ? { textAlign: \"left\" }\r\n                                        : { textAlign: \"right\" }\r\n                                }\r\n                                className=\"ProjectPageNameTitle\"\r\n                            >\r\n                                {name}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ProjectPageAboutCont\">\r\n                            <div\r\n                                style={\r\n                                    index % 2 === 0\r\n                                        ? {\r\n                                              textAlign: \"left\",\r\n                                              marginBottom: \"25px\",\r\n                                          }\r\n                                        : {\r\n                                              textAlign: \"right\",\r\n                                              marginBottom: \"25px\",\r\n                                          }\r\n                                }\r\n                                className=\"ProjectPageAboutText about1\"\r\n                            >\r\n                                {about}\r\n                            </div>\r\n                            <div\r\n                                style={\r\n                                    index % 2 === 0\r\n                                        ? { textAlign: \"left\" }\r\n                                        : { textAlign: \"right\" }\r\n                                }\r\n                                className=\"ProjectPageAboutText about2\"\r\n                            >\r\n                                {about2}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ProjectPageTechCont\">\r\n                        <div\r\n                            style={\r\n                                index % 2 === 0\r\n                                    ? { textAlign: \"left\" }\r\n                                    : { textAlign: \"right\" }\r\n                            }\r\n                            className=\"ProjectPageTechTitle\"\r\n                        >\r\n                            Tech Used\r\n                        </div>\r\n                        <ul\r\n                            style={\r\n                                index % 2 === 0\r\n                                    ? { textAlign: \"left\" }\r\n                                    : { textAlign: \"right\" }\r\n                            }\r\n                            className=\"ProjectPageTechUl\"\r\n                            dir={index % 2 === 0 ? \"ltl\" : \"rtl\"}\r\n                        >\r\n                            {tech.map((techName, i) => (\r\n                                <li className=\"ProjectPageTechLi\" key={i}>\r\n                                    {techName}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"ProjectPageLinkCont\">\r\n                        <div\r\n                            className=\"ProjectPageLink\"\r\n                            onClick={() => window.open(link1)}\r\n                        >\r\n                            Github\r\n                        </div>\r\n                        <div\r\n                            className=\"ProjectPageLink\"\r\n                            onClick={() => window.open(link2)}\r\n                        >\r\n                            Live Link\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {index % 2 === 0 && (\r\n                    <div className=\"ProjectPageTransitionButtonCont\">\r\n                        <button\r\n                            className=\"ProjectPageTransitionButton\"\r\n                            onClick={() =>\r\n                                open ? setOpen(false) : setOpen(true)\r\n                            }\r\n                        >\r\n                            {open ? \"<\" : \">\"}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import planetaryEmpiresGif from './images/example.gif'\r\nimport song from './images/song.gif'\r\nimport tour from './images/tour.gif'\r\n\r\nconst ProjectsArray = [{\r\n    name: 'Planetary Empires',\r\n    link1: 'https://github.com/NCHitsman/Planetary-Empires',\r\n    link2: 'https://planetary-empires.herokuapp.com/',\r\n    about: 'Planetary Empires is an expansion game for Warhammer 40,000 released by Games Workshop. The game rules and accompanying map board and pieces allow you to wage a campaign across a planetary-size landscape. It is designed to assist you in running evocative, narrative-driven campaigns.',\r\n    about2: 'This site helps you organize players, systems, and maps, allowing you to run a Planetary Empires game all in one place!',\r\n    tech: ['Javascript', 'React', 'Redux', 'Sequelize', 'Express', 'Three.js'],\r\n    gif: planetaryEmpiresGif,\r\n},{\r\n    name: 'SoundLoud',\r\n    link1: 'https://github.com/NCHitsman/SoundLoud',\r\n    link2: 'https://soundloud-hitsman.herokuapp.com/',\r\n    about: \"SoundLoud in an app made for uploading and sharing music. This was my first Project, and I learned so much while implementing all of it's funcationality.\",\r\n    about2: \"Provided fully integrated User Authentication, Login, and Sign Up, hashing passwords with bcrypt and storing user data in JSON Web Tokens. I leveraged React-Redux to utilize asynchronous data storage and retrieval, as well as the Fetch API and CSURF library.\",\r\n    tech: ['Javascript', 'React', 'Redux', 'Sequelize', 'Express', 'Cloudinary'],\r\n    gif: song,\r\n},{\r\n    name: 'Portfolio Site',\r\n    link1: 'https://github.com/NCHitsman/portfolio-site',\r\n    link2: 'https://nchitsman.github.io/portfolio-site/',\r\n    about: 'A Person Portfolio site I made for my Job Search. I created a Three.js background and used a \"Accordion Div\" system to create the sectioning you see here!',\r\n    about2: 'I enjoyed making the use of React-Three/Fiber and Typescript to make a very cool Three.js scene I am super proud of. The Project pages you are viewing now, is completly scalable, making it very easy to add a new Project!',\r\n    tech: [ 'Typescript', 'React', 'Three.js', 'CSS', 'Github Pages'],\r\n    gif: tour,\r\n}]\r\n\r\nexport default ProjectsArray\r\n","export default __webpack_public_path__ + \"static/media/example.3352130f.gif\";","export default __webpack_public_path__ + \"static/media/song.6a1361a8.gif\";","export default __webpack_public_path__ + \"static/media/tour.8b20d69e.gif\";","import { useRef, useState } from \"react\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nimport ProjectPage from \"./ProjectPage\";\r\nimport \"./Projects.css\";\r\nimport ProjectsArray from \"../../ProjectsArray\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface props {\r\n    projects: boolean | null;\r\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\r\n    setLastPage: Dispatch<SetStateAction<string>>;\r\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\r\n    setCurrentDownButton: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\r\n    setCurrentUpButton: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\r\n}\r\n\r\nconst Projects = ({\r\n    projects,\r\n    setProjects,\r\n    setLastPage,\r\n    setAbout,\r\n    setCurrentDownButton,\r\n    setCurrentUpButton,\r\n}: props) => {\r\n    const [projectIndex, setProjectIndex] = useState<number | null>(null);\r\n    const [lastProjectIndex, setLastProjectIndex] = useState<number | null>(0);\r\n    const max = ProjectsArray.length - 1;\r\n\r\n    const [set, setSet] = useState<boolean>(false);\r\n    const projectsUpButton = useRef<HTMLButtonElement>(null!);\r\n    const projectsDownButton = useRef<HTMLButtonElement>(null!);\r\n    const projectsUpButtonAbout = useRef<HTMLButtonElement>(null!);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (projects) {\r\n                setSet(true);\r\n            } else {\r\n                setSet(false);\r\n            }\r\n        }, 900);\r\n    }, [projects, projectIndex]);\r\n\r\n    useEffect(() => {\r\n        if (set) {\r\n            if (projectIndex === null || projectIndex === 0) {\r\n                setCurrentUpButton(projectsUpButtonAbout.current);\r\n            } else {\r\n                setCurrentUpButton(projectsUpButton.current);\r\n            }\r\n            setCurrentDownButton(projectsDownButton.current);\r\n        }\r\n    }, [set, setCurrentDownButton, setCurrentUpButton, projectIndex]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={\r\n                    projects == null\r\n                        ? \"ProjectsParentCont\"\r\n                        : projects\r\n                        ? \"ProjectsParentCont active\"\r\n                        : \"ProjectsParentCont unactive\"\r\n                }\r\n            >\r\n                {ProjectsArray.map((ProjectObject, i) => {\r\n                    return (\r\n                        <ProjectPage\r\n                            name={ProjectObject.name}\r\n                            link1={ProjectObject.link1}\r\n                            link2={ProjectObject.link2}\r\n                            about={ProjectObject.about}\r\n                            about2={ProjectObject.about2}\r\n                            tech={ProjectObject.tech}\r\n                            index={i}\r\n                            gif={ProjectObject.gif}\r\n                            projectIndex={projectIndex}\r\n                            lastProjectIndex={lastProjectIndex}\r\n                            key={i}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            {(projectIndex === null || projectIndex === 0) && projects && (\r\n                <div className={\"UpButtonCont\"}>\r\n                    <button\r\n                        ref={projectsUpButtonAbout}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                setProjects(false);\r\n                                setAbout(true);\r\n                                setLastPage(\"projects\");\r\n                                setSet(false);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\"<\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {projects && projectIndex !== 0 && projectIndex !== null && (\r\n                <div className={\"UpButtonCont\"}>\r\n                    <button\r\n                        ref={projectsUpButton}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                if (projectIndex !== null) {\r\n                                    setLastProjectIndex(projectIndex);\r\n                                    setProjectIndex(projectIndex - 1);\r\n                                }\r\n                                setSet(false);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\"<\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {projects && projectIndex !== max && (\r\n                <div className={\"DownButtonCont\"}>\r\n                    <button\r\n                        ref={projectsDownButton}\r\n                        className={set ? \"ChangeButton\" : \"ChangeButton unset\"}\r\n                        onClick={() => {\r\n                            if (set) {\r\n                                if (projectIndex === null) {\r\n                                    setLastProjectIndex(0);\r\n                                    setProjectIndex(1);\r\n                                } else {\r\n                                    setLastProjectIndex(projectIndex);\r\n                                    setProjectIndex(projectIndex + 1);\r\n                                }\r\n                                setSet(false);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={set ? \"ButtonText\" : \"ButtonText unset\"}\r\n                        >\r\n                            {\">\"}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","import { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\nimport AboutMe from \"./components/AboutMe\";\r\nimport Home from \"./components/Home\";\r\nimport Projects from \"./components/Projects\";\r\n\r\nfunction App() {\r\n    const [home, setHome] = useState<boolean | null>(null);\r\n    const [about, setAbout] = useState<boolean | null>(null);\r\n    const [projects, setProjects] = useState<boolean | null>(null);\r\n    const [lastPage, setLastPage] = useState<string>(\"\");\r\n    const [currentDownButton, setCurrentDownButton] =\r\n        useState<HTMLButtonElement | null>(null);\r\n    const [currentUpButton, setCurrentUpButton] =\r\n        useState<HTMLButtonElement | null>(null);\r\n\r\n    const detectMouseWheelDirection = useCallback((e: WheelEvent) => {\r\n        let delta: number | null = null;\r\n        let direction: string | boolean = false;\r\n\r\n        if (e.deltaY) {\r\n            delta = e.deltaY / 60;\r\n        } else if (e.detail) {\r\n            delta = -e.detail / 2;\r\n        }\r\n        if (delta !== null) {\r\n            direction = delta < 0 ? \"up\" : \"down\";\r\n        }\r\n\r\n        return direction;\r\n    }, []);\r\n\r\n    const scrollHandler = useCallback(\r\n        (e: WheelEvent) => {\r\n            let dir = detectMouseWheelDirection(e);\r\n            if (dir === \"down\") {\r\n                if (currentDownButton) {\r\n                    currentDownButton.click();\r\n                }\r\n            } else if (dir === \"up\") {\r\n                if (currentUpButton) {\r\n                    currentUpButton.click();\r\n                }\r\n            }\r\n        },\r\n        [detectMouseWheelDirection, currentDownButton, currentUpButton]\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"wheel\", scrollHandler);\r\n\r\n        return () => window.removeEventListener(\"wheel\", scrollHandler);\r\n    }, [scrollHandler]);\r\n\r\n    return (\r\n        <div className=\"PageContent\">\r\n            <Home\r\n                home={home}\r\n                setHome={setHome}\r\n                setAbout={setAbout}\r\n                setLastPage={setLastPage}\r\n                setCurrentDownButton={setCurrentDownButton}\r\n            />\r\n            <AboutMe\r\n                about={about}\r\n                setAbout={setAbout}\r\n                setHome={setHome}\r\n                lastPage={lastPage}\r\n                setLastPage={setLastPage}\r\n                projects={projects}\r\n                setProjects={setProjects}\r\n                setCurrentDownButton={setCurrentDownButton}\r\n                setCurrentUpButton={setCurrentUpButton}\r\n            />\r\n            <Projects\r\n                projects={projects}\r\n                setProjects={setProjects}\r\n                setLastPage={setLastPage}\r\n                setAbout={setAbout}\r\n                setCurrentDownButton={setCurrentDownButton}\r\n                setCurrentUpButton={setCurrentUpButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// Plans: Make a button to turn camera around and display sites\r\n"],"sourceRoot":""}