{"version":3,"sources":["components/AboutMe/index.tsx","components/Home/HomeCanvas.tsx","components/Home/index.tsx","components/Projects/index.tsx","App.tsx","index.tsx"],"names":["AboutMe","about","setAbout","setHome","setProjects","projects","className","onClick","Grid","grid","useRef","useFrame","current","position","z","ref","args","Plane","plane","rotation","Math","PI","color","Sun","sun","depthWrite","GradientTexture","stops","colors","size","Background","Mount","memo","x","y","rotX","random","rotZ","arg","ceil","ref2","wireframe","polygonOffset","prevProps","nextProps","MountPlane","CameraMove","dir","state","camera","HomeCanvas","home","offset","fov","near","far","range","map","a","i","Home","window","open","Projects","console","log","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c869948b.chunk.js","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\n\nimport \"./AboutMe.css\";\n\ninterface props {\n    about: boolean | null;\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\n    setHome: Dispatch<SetStateAction<boolean>>;\n    projects: boolean | null\n}\n\nconst AboutMe = ({ about, setAbout, setHome, setProjects, projects }: props) => {\n    return (\n        <>\n            <div\n                className={\n                    about == null\n                        ? \"AboutMeParentCont\"\n                        : about\n                        ? \"AboutMeParentCont active\"\n                        : \"AboutMeParentCont unactive\"\n                }\n            >\n                \n            </div>\n            {about && !projects && (\n                <div className={\"UpButtonCont about\"}>\n                    <button\n                        className=\"ChangeButton\"\n                        onClick={() => {\n                            setHome(true);\n                            setAbout(false);\n                        }}\n                    >\n                        <div className=\"ButtonText\">{\"<\"}</div>\n                    </button>\n                </div>\n            )}\n            {about && !projects && (\n                <div className={\"DownButtonCont about\"}>\n                    <button\n                        className=\"ChangeButton\"\n                        onClick={() => {\n                            setProjects(true);\n                        }}\n                    >\n                        <div className=\"ButtonText\">{\">\"}</div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default AboutMe;\n","import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { GradientTexture } from \"@react-three/drei\";\nimport \"./Home.css\";\nimport { useRef } from \"react\";\nimport { GridHelper, Mesh } from \"three\";\nimport { range } from \"lodash\";\nimport { memo } from \"react\";\n\nconst speed = 0.05;\n\nconst Grid = () => {\n    const grid = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (grid.current.position.z > 1) {\n            grid.current.position.z = 0;\n        } else {\n            grid.current.position.z += speed;\n        }\n    });\n\n    return (\n        <gridHelper\n            ref={grid}\n            args={[190, 170, \"#580360\", \"#580360\"]}\n            position={[0, 0, 0]}\n        />\n    );\n};\n\nconst Plane = () => {\n    const plane = useRef<GridHelper>(null!);\n\n    useFrame(() => {\n        if (plane.current.position.z > 1) {\n            plane.current.position.z = 0;\n        } else {\n            plane.current.position.z += speed;\n        }\n    });\n\n    return (\n        <mesh\n            ref={plane}\n            position={[0, -0.05, 0]}\n            rotation={[-(Math.PI / 2), 0, 0]}\n        >\n            <planeBufferGeometry args={[190, 170]} />\n            <meshBasicMaterial color=\"#0C345A\" />\n        </mesh>\n    );\n};\n\nconst Sun = () => {\n    const sun = useRef<Mesh>(null!);\n\n    useFrame(() => {\n        sun.current.rotation.z -= 0.001;\n    });\n\n    return (\n        <mesh position={[0, 5, -150]} ref={sun}>\n            <sphereBufferGeometry args={[50, 36, 36]} />\n            <meshBasicMaterial depthWrite={false}>\n                <GradientTexture\n                    stops={[0, 0.1, 0.2, 0.35, 0.6, 1]}\n                    colors={[\n                        \"#FAE9B3\",\n                        \"#F7D050\",\n                        \"#F76C26\",\n                        \"#EC5409\",\n                        \"#9E1E05\",\n                        \"#5d0303\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Background = () => {\n    return (\n        <mesh position={[0, 25, -155]}>\n            <planeBufferGeometry args={[575, 75]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.3, 0.4, 0.8, 1]}\n                    colors={[\n                        \"#2d9ee8\",\n                        \"#a78ced\",\n                        \"#f86fbe\",\n                        \"#ff6b70\",\n                        \"#f69109\",\n                    ]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst Mount = memo(({ x, y }: { x: number; y: number }) => {\n    const rotX = Math.random();\n    const rotZ = Math.random();\n    const arg = Math.ceil(Math.random() * 2);\n\n    const ref = useRef<Mesh>(null!);\n    const ref2 = useRef<Mesh>(null!);\n\n    useFrame(() => {\n        ref.current.rotation.x += 0.0005;\n        ref.current.rotation.y += 0.0005;\n        ref2.current.rotation.x += 0.0005;\n        ref2.current.rotation.y += 0.0005;\n    });\n\n    return (\n        <>\n            <mesh position={[x, 0.5, y]} rotation={[rotX, 0, rotZ]} ref={ref}>\n                <tetrahedronBufferGeometry args={[5.01, arg]} />\n                <meshBasicMaterial\n                    color=\"#368FD3\"\n                    wireframe={true}\n                    polygonOffset={true}\n                />\n            </mesh>\n            <mesh position={[x, 0.5, y]} rotation={[rotX, 0, rotZ]} ref={ref2}>\n                <tetrahedronBufferGeometry args={[5, arg]} />\n                <meshPhongMaterial\n                    color=\"black\"\n                    wireframe={false}\n                    polygonOffset={true}\n                />\n            </mesh>\n        </>\n    );\n}, (prevProps, nextProps) => true)\n\nconst MountPlane = () => {\n    return (\n        <mesh position={[0, 0.05, -60]} rotation={[-(Math.PI / 2), 0, 0]}>\n            <planeBufferGeometry args={[190, 15]} />\n            <meshBasicMaterial>\n                <GradientTexture\n                    stops={[0, 0.5, 1]}\n                    colors={[\"black\", \"black\", \"#580360\"]}\n                    size={1024}\n                />\n            </meshBasicMaterial>\n        </mesh>\n    );\n};\n\nconst CameraMove = () => {\n    let dir = \"up\";\n    useFrame((state) => {\n        if (state.camera.rotation.x > -0.32) {\n            dir = \"down\";\n        } else if (state.camera.rotation.x < -0.45) {\n            dir = \"up\";\n        }\n\n        if (dir === \"up\") {\n            state.camera.rotation.x += 0.00005;\n        } else if (dir === \"down\") {\n            state.camera.rotation.x -= 0.00005;\n        }\n    });\n    return null;\n};\n\nconst HomeCanvas = ({home}: {home: boolean}) => {\n    let offset = true;\n\n    return (\n        <Canvas\n            className={'HomeCanvas'}\n            camera={{\n                fov: 75,\n                near: 0.1,\n                far: 1000,\n                position: [0, 4, 9],\n            }}\n        >\n            <Grid />\n            <Background />\n            <Plane />\n            <Sun />\n            {/* <OrbitControls /> */}\n            {range(50).map((a, i) => {\n                offset ? (offset = false) : (offset = true);\n                return <Mount key={a} x={i * 5 - 125} y={offset ? -65 : -70} />;\n            })}\n            <MountPlane />\n            <CameraMove />\n        </Canvas>\n    );\n};\n\nexport default HomeCanvas;\n","import HomeCanvas from \"./HomeCanvas\";\nimport \"./Home.css\";\nimport { Dispatch, SetStateAction } from \"react\";\n\ninterface props {\n    home: boolean;\n    setHome: Dispatch<SetStateAction<boolean>>;\n    setAbout: Dispatch<SetStateAction<boolean | null>>;\n}\n\nconst Home = ({ home, setHome, setAbout }: props) => {\n    return (\n        <>\n            <div className=\"HomeDivParent\">\n                <div className={\"HomeInfoCont\"}>\n                    <div className=\"HomeName\">Noah Carmichael-Hitsman</div>\n                    <div className=\"HomeLinkCont\">\n                        <div\n                            className=\"HomeLink\"\n                            onClick={() => {\n                                window.open(\"https://github.com/NCHitsman\");\n                            }}\n                        >\n                            Github\n                        </div>\n                        <div\n                            className=\"HomeLink\"\n                            onClick={() => {\n                                window.open(\n                                    \"https://www.linkedin.com/in/noah-carmichael-hitsman-b024a1203/\"\n                                );\n                            }}\n                        >\n                            LinkedIn\n                        </div>\n                    </div>\n                </div>\n\n                <HomeCanvas home={home} />\n            </div>\n            {home && (\n                <div className={\"DownButtonCont\"}>\n                    <button\n                        className=\"ChangeButton\"\n                        onClick={() => {\n                            setHome(false);\n                            setAbout(true);\n                        }}\n                    >\n                        <div className=\"ButtonText\">{\">\"}</div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","import { Dispatch, SetStateAction } from \"react\";\nimport \"./Projects.css\";\n\ninterface props {\n    projects: boolean | null;\n    setProjects: Dispatch<SetStateAction<boolean | null>>;\n}\n\nconst Projects = ({ projects, setProjects }: props) => {\n    console.log(projects);\n\n    return (\n        <>\n            <div\n                className={\n                    projects == null\n                        ? \"ProjectsParentCont\"\n                        : projects\n                        ? \"ProjectsParentCont active\"\n                        : \"ProjectsParentCont unactive\"\n                }\n            ></div>\n            {projects && (\n                <div className={\"UpButtonCont about\"}>\n                    <button\n                        className=\"ChangeButton\"\n                        onClick={() => {\n                            setProjects(false);\n                        }}\n                    >\n                        <div className=\"ButtonText\">{\"<\"}</div>\n                    </button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Projects;\n","import { useState } from \"react\";\nimport AboutMe from \"./components/AboutMe\";\nimport Home from \"./components/Home\";\nimport Projects from \"./components/Projects\";\n\nfunction App() {\n    const [home, setHome] = useState<boolean>(true);\n    const [about, setAbout] = useState<boolean | null>(null);\n    const [projects, setProjects] = useState<boolean | null>(null);\n\n    return (\n        <div className=\"PageContent\">\n            <Home home={home} setHome={setHome} setAbout={setAbout} />\n            <AboutMe about={about} setAbout={setAbout} setHome={setHome} setProjects={setProjects} projects={projects}/>\n            <Projects projects={projects} setProjects={setProjects} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// Plans: Make a button to turn camera around and display sites\n"],"sourceRoot":""}